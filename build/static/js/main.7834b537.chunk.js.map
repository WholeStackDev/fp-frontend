{"version":3,"sources":["Components/Upload/Upload.styles.js","Components/Upload/Tracks/Tracks.style.js","Utilities/GetFileSize.js","Utilities/GetDuration.js","Components/Track/Track.js","Store/Actions.js","Components/Upload/Tracks/Tracks.js","Components/Upload/Upload.js","Components/Layout/Header.js","App.js","serviceWorker.js","Store/Reducers/UploadReducer.js","index.js"],"names":["styles","theme","root","flexGrow","alignItems","textAlign","box","padding","spacing","unit","color","palette","text","primary","margin","control","paper","getSize","bytes","i","size","Math","round","seconds","time","connect","state","tracks","upload","selectedTrackIndex","dispatch","editTrack","track","type","props","length","changeHandler","event","Object","objectSpread","defineProperty","target","id","value","react_default","a","createElement","index_es","label","variant","fullWidth","disabled","fileName","InputLabelProps","shrink","title","onChange","speaker","material_ui_pickers_esm","eventYear","DateTime","local","year","c","keyboard","clearable","views","format","getFileSize","fileSize","getDuration","duration","setSelectedTrackIndex","index","selectedTrack","withStyles","classes","TrackList","map","ListItem_default","key","button","selected","onClick","selectedIndex","ListItemText_default","Paper_default","className","Grid_default","container","item","xs","List_default","Track","addTrack","trackToAdd","clearTracks","direction","accept","name","multiple","_ref","asyncToGenerator","regenerator_default","mark","_callee","files","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","file","meta","wrap","_context","prev","next","undefined","Symbol","iterator","done","mm","sent","push","common","artist","t0","return","finish","stop","_x","apply","this","arguments","style","display","htmlFor","raised","component","Tracks","grow","menuButton","marginLeft","marginRight","position","aria-label","Menu_default","createMuiTheme","blueGrey","typography","useNextVariants","app","utils","LuxonUtils","CssBaseline_default","Header","Upload","Boolean","window","location","hostname","match","initialState","reducer","action","concat","rootReducer","combineReducers","uploadReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7834b537.chunk.js","sourcesContent":["const styles = theme => ({\n  root: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  box: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.primary,\n    margin: \"2rem\"\n  },\n  control: {\n    padding: theme.spacing.unit * 2\n  },\n  paper: {\n    padding: \"1rem\"\n  }\n});\n\nexport default styles;\n","const styles = theme => ({\n  paper: {\n    padding: \"1rem\"\n  }\n});\n\nexport default styles;\n","const getSize = bytes => {\n  const abb = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"];\n  var i = 0;\n  var size = bytes;\n  while (size > 1024 && i < 6) {\n    i++;\n    size = size / 1024;\n  }\n  return Math.round(size * 100) / 100 + abb[i];\n};\n\nexport default getSize;\n","const getSize = seconds => {\n  const abb = [\"sec\", \"min\", \"hr\"];\n  var i = 0;\n  var time = seconds;\n  while (time > 60 && i < 2) {\n    i++;\n    time = time / 60;\n  }\n  return Math.round(time * 10) / 10 + \" \" + abb[i];\n};\n\nexport default getSize;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { InlineDatePicker } from \"material-ui-pickers\";\nimport { DateTime } from \"luxon\";\nimport getFileSize from \"../../Utilities/GetFileSize\";\nimport getDuration from \"../../Utilities/GetDuration\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../Store/Actions\";\n\nconst track = props => {\n  if (props.tracks.length > 0) {\n    const changeHandler = event => {\n      props.editTrack({\n        ...props.tracks[props.selectedTrackIndex],\n        [event.target.id]: event.target.value\n      });\n    };\n\n    const eventYearChangeHandler = event => {\n      const year =\n        event.target && event.target.value ? event.target.value : event.c.year;\n      props.editTrack({\n        ...props.tracks[props.selectedTrackIndex],\n        eventYear: year\n      });\n    };\n\n    return (\n      <div id=\"track\">\n        <TextField\n          id=\"file-name\"\n          label=\"File Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          disabled\n          value={props.tracks[props.selectedTrackIndex].fileName}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <TextField\n          id=\"title\"\n          label=\"Title\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          value={props.tracks[props.selectedTrackIndex].title}\n          onChange={changeHandler}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <TextField\n          id=\"speaker\"\n          label=\"Speaker\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          value={props.tracks[props.selectedTrackIndex].speaker}\n          onChange={changeHandler}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <TextField\n          id=\"event\"\n          label=\"Event\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          value={props.tracks[props.selectedTrackIndex].event}\n          onChange={changeHandler}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <InlineDatePicker\n          id=\"eventYear\"\n          value={\n            props.tracks[props.selectedTrackIndex].eventYear\n              ? DateTime.local(props.tracks[props.selectedTrackIndex].eventYear)\n              : null\n          }\n          onChange={eventYearChangeHandler}\n          keyboard\n          clearable\n          views={[\"year\"]}\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Event Year\"\n          fullWidth\n          format=\"yyyy\"\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <TextField\n          id=\"file-size\"\n          label=\"File Size\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          disabled\n          value={getFileSize(props.tracks[props.selectedTrackIndex].fileSize)}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n        <TextField\n          id=\"duration\"\n          label=\"Duration\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          disabled\n          value={getDuration(props.tracks[props.selectedTrackIndex].duration)}\n          InputLabelProps={{\n            shrink: true\n          }}\n        />\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.upload.tracks,\n    selectedTrackIndex: state.upload.selectedTrackIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editTrack: track => dispatch({ type: actionTypes.EDIT_TRACK, track: track })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(track);\n","export const ADD_TRACK = 'ADD_TRACK';\nexport const CLEAR_TRACKS = 'CLEAR_TRACKS';\nexport const SET_SELECTED_TRACK_INDEX = 'SET_SELECTED_TRACK_INDEX';\nexport const EDIT_TRACK = 'EDIT_TRACK';","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./Tracks.style\";\nimport Track from \"../../Track/Track\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../../Store/Actions\";\n\nconst tracks = props => {\n  const { classes } = props;\n  // const [selectedTrack, setSelectedTrack] = useState(null);\n  // const [selectedTrackIndex, setSelectedTrackIndex] = useState(0);\n\n  if (props.tracks.length > 0) {\n    const changeSelectedTrack = selectedIndex => {\n      // setSelectedTrackIndex(selectedIndex);\n      // setSelectedTrack(props.tracks[selectedIndex]);\n      props.setSelectedTrackIndex(selectedIndex);\n    };\n\n    const TrackList = props.tracks.map((track, index) => {\n      return (\n        <ListItem\n          key={index}\n          button\n          selected={index === props.selectedTrackIndex}\n          onClick={() => changeSelectedTrack(index)}\n        >\n          <ListItemText primary={index + 1} />\n        </ListItem>\n      );\n    });\n\n    return (\n      <Paper id=\"tracks\" className={classes.paper}>\n        <Grid container>\n          <Grid item xs={1}>\n            <List>{TrackList}</List>\n          </Grid>\n          <Grid item xs={11}>\n            <Track />\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.upload.tracks,\n    selectedTrackIndex: state.upload.selectedTrackIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedTrackIndex: index =>\n      dispatch({\n        type: actionTypes.SET_SELECTED_TRACK_INDEX,\n        selectedTrack: index\n      })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(tracks));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import axios from \"axios\";\nimport * as mm from \"music-metadata-browser\";\nimport { Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styles from \"./Upload.styles\";\nimport Tracks from \"./Tracks/Tracks\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../Store/Actions\";\n\nconst upload = props => {\n  const fileSelectHandler = event => {\n    props.clearTracks();\n\n    (async files => {\n      let id = 0;\n      const results = [];\n      for (const file of files) {\n        id++;\n        let meta = await mm.parseBlob(file);\n        results.push({\n          id: id,\n          fileName: file.name || \"\",\n          title: meta.common.title || \"\",\n          speaker: meta.common.artist || \"\",\n          event: \"\",\n          eventYear: meta.common.year || null,\n          fileSize: file.size || 0,\n          duration: meta.format.duration || 0\n        });\n      }\n      props.addTrack(results);\n    })(event.target.files);\n  };\n\n  // const submitFileHandler = () => {\n  //   const data = new FormData();\n  //   data.append(\"file\", file);\n  //   axios\n  //     .post(\"https://localhost:44308/api/values\", data)\n  //     .then(results => {\n  //       console.log(results.status);\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const UploadButton = () => {\n    if (props.tracks.length > 0) {\n      return (\n        <Button variant=\"contained\" color=\"primary\">\n          Upload\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const { classes } = props;\n\n  return (\n    <Grid container className={classes.root} direction=\"column\" spacing={16}>\n      <Grid item xs={12} className={classes.box}>\n        <input\n          id=\"upload-input\"\n          accept=\"audio/*\"\n          name=\"uploadInput\"\n          type=\"file\"\n          multiple\n          onChange={fileSelectHandler}\n          style={{ display: \"none\" }}\n        />\n        <label htmlFor=\"upload-input\">\n          <Button\n            raised=\"true\"\n            component=\"span\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Select Files\n          </Button>\n        </label>\n      </Grid>\n      <Grid item xs={8} className={classes.box}>\n        <Tracks tracks={props.tracks} />\n      </Grid>\n      <Grid item xs={12} className={classes.box}>\n        <UploadButton />\n      </Grid>\n    </Grid>\n  );\n};\n\nupload.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.upload.tracks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTrack: track =>\n      dispatch({ type: actionTypes.ADD_TRACK, trackToAdd: track }),\n    clearTracks: () => dispatch({ type: actionTypes.CLEAR_TRACKS })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(upload));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nconst header = props => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            Upload\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nheader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(header);\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport Upload from \"./Components/Upload/Upload\";\nimport LuxonUtils from \"@date-io/luxon\";\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport Header from \"./Components/Layout/Header\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst app = () => {\n  return (\n    <div id=\"app\">\n      <MuiPickersUtilsProvider utils={LuxonUtils}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Header />\n          <Upload />\n        </MuiThemeProvider>\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n};\n\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../Actions\";\n\nconst initialState = {\n  tracks: [],\n  selectedTrackIndex: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TRACK:\n      return {\n        ...state,\n        tracks: state.tracks.concat(action.trackToAdd)\n      };\n    case actionTypes.CLEAR_TRACKS:\n      return {\n        ...state,\n        tracks: []\n      };\n    case actionTypes.SET_SELECTED_TRACK_INDEX:\n      return {\n        ...state,\n        selectedTrackIndex: action.selectedTrack\n      };\n    case actionTypes.EDIT_TRACK:\n      return {\n        ...state,\n        tracks: state.tracks.map(track => {\n          if (track.id === action.track.id) {\n            return {\n              ...action.track\n            };\n          } else {\n            return track;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"typeface-roboto\";\n\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport uploadReducer from \"./Store/Reducers/UploadReducer\";\n\nconst rootReducer = combineReducers({\n  upload: uploadReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}